package com.example.eventmaster;

import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.widget.CompoundButton;
import android.widget.ImageView;
import android.widget.Switch;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;

import java.util.Random;

public class ProfileActivity extends AppCompatActivity {
    private static final String PREFS_NAME = "ProfilePrefs";
    private static final String PROFILE_COLOR_KEY = "profile_color";


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.profile_screen);

        Profile user = (Profile) getIntent().getSerializableExtra("User"); // User from MainActivity
        ImageView profile_picture = findViewById(R.id.profile_picture );

        SharedPreferences prefs = getSharedPreferences(PREFS_NAME, MODE_PRIVATE);
        int savedColor = prefs.getInt(PROFILE_COLOR_KEY, -1);

        // Need if statement for when profile picture upload is empty


        if (user.getName().isEmpty()) {
            profile_picture.setImageResource(R.drawable.profile_picture);
        }
        else {
            if (savedColor == -1) {
                // If no color is saved, generate a new random background color
                int newColor = randomColorGenerator(); // Generates a random color

                // Save the new color in SharedPreferences
                SharedPreferences.Editor editor = prefs.edit();
                editor.putInt(PROFILE_COLOR_KEY, newColor);
                editor.apply();
            }

            // Makes autogenerated profile picture w/ saved color
            Bitmap pfpBitmap = Image.generateProfilePicture(user.getName(), 200, savedColor, Color.WHITE);
            profile_picture.setImageBitmap(pfpBitmap);
        }


    }

    /**
     * Random generates a color for the background of the profile picture
     *
     * @return a color that isn't close to white
     */
    public static int randomColorGenerator() {
        Random random = new Random();

        int red, green, blue;

        do {
            red = random.nextInt(256);
            green = random.nextInt(256);
            blue = random.nextInt(256);
        } while ((red + green + blue) > 600); // Makes sure that the background color won't be close to the text color white

        return Color.rgb(red, green, blue);
    }
}
